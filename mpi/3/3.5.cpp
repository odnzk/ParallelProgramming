#include <mpi.h>
#include <stdio.h>

int main(int argc, char** argv) {
    MPI_Init(NULL, NULL);
    int rank;
    int world;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &world);
    printf("Hello: rank %d, world: %d\n",rank, world);
    MPI_Finalize();
}
// В следующих заданиях матрицы и векторы вещественных чисел задаются на нулевом процессе.
//Размер матриц не менее 100 x100 (можно взять больше кратным количеству процессов), размер
//векторов не менее 100 элементов. 1 задание = 2 балла
// 3.5. Дан вектор Для распределения элементов вектора по процессам использовать функцию
//MPI_Scatter. Используя функцию MPI_Reduce для операции MPI_MAXLOC, найти максимальное
//значение среди элементов x. Вывести в главном процессе вначале все локальные максимумы (для
//каждого процесса свой максимум для части вектора x), а затем -- ранги содержащих их процессов